
- iteratoren !

- pyOpenMS v0.1

- umbenenneno von methoden, z.b ist "set" in python kein methoden name

- begin(), end() mit param, eg
     beginRT(rtmin)  # wrap-iter-begin rtrange
     endRT(rtmax)    # wrap-iter-end   rtrange

  -> methode  rtrange(rtmin, rtmax)
     

ideen:

  1) wenn methode M von X eine Ref auf Y zurückgibt:
     - alle wrapped objekte haben shared_ptr
     - methode M returns Proxy mit shared_ptr to X und name von M
     - proxy wrapped methoden von R durch impliziten aufruf der methode M

       der einfach heit halber: proxy objekt hat keine methoden die
       referenzen auf zu wrappende objekte zurückliefern
       ansonsten: --- chaining !?


  2) sicheres wrappen von non const iteratoren:
     - iterobject speichert shared_ptr auf das orignal objekt

